apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sops-secrets-operator.fullname" . }}
  labels:
{{ include "sops-secrets-operator.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sops-secrets-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app.kubernetes.io/name: {{ include "sops-secrets-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "sops-secrets-operator.fullname" . }}
      {{- if .Values.gpg.enabled }}
      initContainers:
        - name: init-myservice
          image: debian:buster
          imagePullPolicy: Always
          command: ['/bin/sh', '-c', 'cp -Lr /var/secrets/gpg-secrets/* /var/secrets/gpg/']
          volumeMounts:
          - mountPath: /var/secrets/gpg
            name: sops-gpg
          - mountPath: /var/secrets/gpg-secrets
            name: sops-operator-gpg-keys1
          - mountPath: /var/secrets/gpg-secrets/private-keys-v1.d
            name: sops-operator-gpg-keys2
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.gcp.enabled .Values.gpg.enabled .Values.secretsAsFiles }}
          volumeMounts:
          {{- end }}
          {{- if .Values.gcp.enabled }}
          - mountPath: /var/secrets/google
            name: sops-operator-gke-svc-account
          {{- end }}
          {{- if .Values.gpg.enabled }}
          - mountPath: /var/secrets/gpg
            name: sops-gpg
          - mountPath: /var/secrets/gpg-secrets
            name: sops-operator-gpg-keys1
          - mountPath: /var/secrets/gpg-secrets/private-keys-v1.d
            name: sops-operator-gpg-keys2
          {{- end }}
          {{- range .Values.secretsAsFiles }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            readOnly: true
          {{- end }}
          command:
          - /usr/local/bin/manager
          args:
          # The address the metric endpoint binds to. (default ":8080")
          #- "--metrics-bind-address=127.0.0.1:8080"
          - "--health-probe-bind-address=:{{ .Values.healthProbes.port }}"
          # Enable leader election for controller manager. Enabling this will ensure there is only one active controller manager.
          - "--leader-elect"
          - "--requeue-decrypt-after={{ .Values.requeueAfter }}"
          - "--zap-encoder={{ .Values.logging.encoder }}"
          - "--zap-log-level={{ .Values.logging.level }}"
          - "--zap-stacktrace-level={{ .Values.logging.stacktraceLevel }}"
          {{- if .Values.kubeconfig.enabled }}
          - "--kubeconfig={{ .Values.kubeconfig.path | quote }}"
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.healthProbes.port }}
            initialDelaySeconds: {{ .Values.healthProbes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthProbes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.healthProbes.port }}
            initialDelaySeconds: {{ .Values.healthProbes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthProbes.readiness.periodSeconds }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if .Values.gcp.enabled }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
            {{- end }}
            {{- if .Values.gpg.enabled }}
            - name: GNUPGHOME
              value: /var/secrets/gpg
            {{- end }}
            {{- if .Values.azure.enabled }}
            {{- $secretname := printf "%s-azure-secret" (include "sops-secrets-operator.name" .) -}}
            {{- if .Values.azure.existingSecretName }}
            {{- $secretname = .Values.azure.existingSecretName -}}
            {{- end }}
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $secretname }}
                  key: tenantId
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $secretname }}
                  key: clientId
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $secretname }}
                  key: clientSecret
            {{- end }}
            {{- range .Values.secretsAsEnvVars }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .secretKey }}
            {{- end }}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or .Values.gcp.enabled .Values.gpg.enabled .Values.secretsAsFiles }}
      volumes:
      {{- end }}
      {{- if .Values.gcp.enabled }}
      - name: sops-operator-gke-svc-account
        secret:
          {{- if .Values.gcp.existingSecretName }}
          secretName: {{ .Values.gcp.existingSecretName }}
          {{- else if .Values.gcp.svcAccSecretCustomName }}
          secretName: {{ .Values.gcp.svcAccSecretCustomName }}
          {{- else }}
          secretName: {{ include "sops-secrets-operator.name" . }}-gcp-secret
          {{- end }}
      {{- end }}
      {{- if .Values.gpg.enabled }}
      - name: sops-operator-gpg-keys1
        secret:
          secretName: {{ .Values.gpg.secret1 }}
      - name: sops-operator-gpg-keys2
        secret:
          secretName: {{ .Values.gpg.secret2 }}
      - name: sops-gpg
        emptyDir: {}
      {{- end }}
      {{- range .Values.secretsAsFiles }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
