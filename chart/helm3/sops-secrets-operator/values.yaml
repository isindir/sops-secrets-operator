# Default values for sops-secrets-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1  # Deployment replica count  - should not be modified

image:
  repository: isindir/sops-secrets-operator  # Operator image
  tag: 0.1.13  # Operator image tag
  pullPolicy: Always  # Operator image pull policy

imagePullSecrets: []  # Secrets to pull image from private docker repository
nameOverride: ""  # Overrides auto-generated short resource name
fullnameOverride: ""  # Overrides auto-generated long resource name

# aws
podAnnotations: {}  # Annotations to be added to operator pod

serviceAccount:
  annotations: {} # Annotations to be added to the service account

requeueAfter: 5 # Requeue decryption errors for reconciliation after 5 minutes.

gpg:
  enabled: false  # If `true` GCP secret will be created from provided value and mounted as environment variable
  secret1: gpg1  # Name of the secret to create - will override default secret name if specified
  secret2: gpg2  # Name of the secret to create - will override default secret name if specified

gcp:
  enabled: false  # Node labels for operator pod assignment
  svcAccSecretCustomName: ''  # Name of the secret to create - will override default secret name if specified
  svcAccSecret: ''  # If `gcp.enabled` is `true`, this value must be specified as GCP service account secret json payload
  existingSecretName: '' # Name of a pre-existing secret containing GCP service account secret json payload

# Azure KeyVault
# If you enable this, you must either specify clientId, tenantId and clientSecret in values.yaml or you can reference
# a secret you have created yourself via another means by specifying a name in existingSecretName
azure:
  enabled: false # if true Azure KeyVault will be used
  # Specify your credentials here or use existingSecretName below to use a pre-existing secret
  tenantId: '' # TenantID of Azure Service principal to use
  clientId: '' # ClientID (Application ID) of Azure Service Principal to use
  clientSecret: '' # Client Secret of Azure Service Principal
  # Pre-existing secret must contain the keys tenantId, clientId and clientSecret with the appropriate values
  existingSecretName: '' # Name of a pre-existing secret containing Azure Service Principal Credentials (ClientID, ClientSecret, TenantID)

extraEnv: []  # A list of additional environment variables
#- name: AWS_SDK_LOAD_CONFIG
#  value: "1"

secretsAsEnvVars: []  # configure custom secrets to be used as environment variables at runtime, see values.yaml
#- name: SECRET_GREETING
#  secretName: my-secret-greeting
#  secretKey: greeting

secretsAsFiles: []  # configure custom secrets to be mounted at runtime, see values.yaml
# All files within secret will be mounted in "/etc/foo" - same as 1st example in k8s documentation
# all secrets will be mounted as readonly
#- name: foo
#  mountPath: "/etc/foo"
#  secretName: mysecret

resources: {}  # Operator container resources
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}  # Node selector to use for pod configuration

securityContext:
  enabled: false  # Enable securityContext
  runAsUser: 1000  # UID to run as
  runAsGroup: 3000  # GID to run as
  fsGroup: 1000  # fs group

tolerations: []  # Tolerations to be applied to operator pod

affinity: {}  # Node affinity for pod assignment

rbac:
  enabled: true  # Create and use RBAC resources
